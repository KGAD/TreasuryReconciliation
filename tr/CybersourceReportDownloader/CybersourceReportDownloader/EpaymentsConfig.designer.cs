#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CybersourceReportDownloader
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ePaymentsConfig")]
	public partial class EpaymentsConfigDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCybersourceGatewayMerchantConfiguration(CybersourceGatewayMerchantConfiguration instance);
    partial void UpdateCybersourceGatewayMerchantConfiguration(CybersourceGatewayMerchantConfiguration instance);
    partial void DeleteCybersourceGatewayMerchantConfiguration(CybersourceGatewayMerchantConfiguration instance);
    #endregion
		
		public EpaymentsConfigDataContext() : 
				base(global::CybersourceReportDownloader.Properties.Settings.Default.ePaymentsConfigConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EpaymentsConfigDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpaymentsConfigDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpaymentsConfigDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpaymentsConfigDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CybersourceGatewayMerchantConfiguration> CybersourceGatewayMerchantConfigurations
		{
			get
			{
				return this.GetTable<CybersourceGatewayMerchantConfiguration>();
			}
		}
	}
	
	[Table(Name="dbo.CybersourceGatewayMerchantConfig")]
	public partial class CybersourceGatewayMerchantConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CybersourceGatewayMerchantConfigID;
		
		private System.Nullable<int> _CybersourceGatewayProcessorID;
		
		private string _MerchantId;
		
		private string _Username;
		
		private string _Password;
		
		private string _ProfileName;
		
		private bool _IgnoreCVResult;
		
		private bool _Level2or3Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCybersourceGatewayMerchantConfigIDChanging(int value);
    partial void OnCybersourceGatewayMerchantConfigIDChanged();
    partial void OnCybersourceGatewayProcessorIDChanging(System.Nullable<int> value);
    partial void OnCybersourceGatewayProcessorIDChanged();
    partial void OnMerchantIdChanging(string value);
    partial void OnMerchantIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    partial void OnIgnoreCVResultChanging(bool value);
    partial void OnIgnoreCVResultChanged();
    partial void OnLevel2or3EnabledChanging(bool value);
    partial void OnLevel2or3EnabledChanged();
    #endregion
		
		public CybersourceGatewayMerchantConfiguration()
		{
			OnCreated();
		}
		
		[Column(Storage="_CybersourceGatewayMerchantConfigID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CybersourceGatewayMerchantConfigID
		{
			get
			{
				return this._CybersourceGatewayMerchantConfigID;
			}
			set
			{
				if ((this._CybersourceGatewayMerchantConfigID != value))
				{
					this.OnCybersourceGatewayMerchantConfigIDChanging(value);
					this.SendPropertyChanging();
					this._CybersourceGatewayMerchantConfigID = value;
					this.SendPropertyChanged("CybersourceGatewayMerchantConfigID");
					this.OnCybersourceGatewayMerchantConfigIDChanged();
				}
			}
		}
		
		[Column(Storage="_CybersourceGatewayProcessorID", DbType="Int")]
		public System.Nullable<int> CybersourceGatewayProcessorID
		{
			get
			{
				return this._CybersourceGatewayProcessorID;
			}
			set
			{
				if ((this._CybersourceGatewayProcessorID != value))
				{
					this.OnCybersourceGatewayProcessorIDChanging(value);
					this.SendPropertyChanging();
					this._CybersourceGatewayProcessorID = value;
					this.SendPropertyChanged("CybersourceGatewayProcessorID");
					this.OnCybersourceGatewayProcessorIDChanged();
				}
			}
		}
		
		[Column(Storage="_MerchantId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MerchantId
		{
			get
			{
				return this._MerchantId;
			}
			set
			{
				if ((this._MerchantId != value))
				{
					this.OnMerchantIdChanging(value);
					this.SendPropertyChanging();
					this._MerchantId = value;
					this.SendPropertyChanged("MerchantId");
					this.OnMerchantIdChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_ProfileName", DbType="VarChar(50)")]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[Column(Storage="_IgnoreCVResult", DbType="Bit NOT NULL")]
		public bool IgnoreCVResult
		{
			get
			{
				return this._IgnoreCVResult;
			}
			set
			{
				if ((this._IgnoreCVResult != value))
				{
					this.OnIgnoreCVResultChanging(value);
					this.SendPropertyChanging();
					this._IgnoreCVResult = value;
					this.SendPropertyChanged("IgnoreCVResult");
					this.OnIgnoreCVResultChanged();
				}
			}
		}
		
		[Column(Storage="_Level2or3Enabled", DbType="Bit NOT NULL")]
		public bool Level2or3Enabled
		{
			get
			{
				return this._Level2or3Enabled;
			}
			set
			{
				if ((this._Level2or3Enabled != value))
				{
					this.OnLevel2or3EnabledChanging(value);
					this.SendPropertyChanging();
					this._Level2or3Enabled = value;
					this.SendPropertyChanged("Level2or3Enabled");
					this.OnLevel2or3EnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
